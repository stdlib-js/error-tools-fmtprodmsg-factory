{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.url] - website URL for full error message\n* @param {string} [options.message] - error message template with `{{url}}` and `{{code}}` placeholders that will be replaced\n* @returns {(Error|null)} error object or null\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'url' ) ) {\n\t\topts.url = options.url;\n\t\tif ( !isString( opts.url ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'url', opts.url ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'message' ) ) {\n\t\topts.message = options.message;\n\t\tif ( !isString( opts.message ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'message', opts.message ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( '@stdlib/string-replace' );\nvar copy = require( '@stdlib/utils-copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\n\n\n// MAIN //\n\n/**\n* Returns a function which formats an error message for production.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.url] - website URL for full error message\n* @param {string} [options.message] - error message template with `{{url}}` and `{{code}}` placeholders that will be replaced\n* @returns {Function} error formatting function\n*\n* @example\n* var opts = {\n*     'url': 'https://stdlib.io/error-decoder.html'\n* };\n*\n* var fcn = fmtprodmsgFactory( opts );\n* // returns <Function>\n*/\nfunction fmtprodmsgFactory( options ) {\n\tvar opts;\n\tvar err;\n\topts = copy( defaults );\n\tif ( arguments.length > 0 ) {\n\t\terr = validate( opts, options );\n\t}\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn formatProdErrorMessage;\n\n\t/**\n\t* Formats an error message for production.\n\t*\n\t* @private\n\t* @param {string} code - error code\n\t* @param {*} ...args - error message arguments\n\t* @returns {string} formatted error message\n\t*/\n\tfunction formatProdErrorMessage() {\n\t\tvar code = arguments[ 0 ];\n\t\tvar url = opts.url + '?code='+code;\n\t\tvar msg;\n\t\tvar i;\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\turl += '&arg[]=' + encodeURIComponent( arguments[ i ] );\n\t\t}\n\t\tmsg = replace( opts.message, '{{url}}', url );\n\t\tmsg = replace( msg, '{{code}}', code );\n\t\treturn msg;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = fmtprodmsgFactory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which formats an error message for production.\n*\n* @module @stdlib/error-tools-fmtprodmsg-factory\n*\n* @example\n* var fmtprodmsgFactory = require( '@stdlib/error-tools-fmtprodmsg-factory' );\n*\n* var formatProdErrorMessage = fmtprodmsgFactory();\n* // returns <Function>\n*/\n\n// MAIN //\n\nvar fmtprodmsgFactory = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = fmtprodmsgFactory;\n"],"names":["isObject","require$$0","hasOwnProp","require$$1","isString","require$$2","isPrimitive","format","require$$3","replace","copy","validate","opts","options","url","TypeError","message","defaults","main","err","arguments","length","formatProdErrorMessage","msg","i","code","encodeURIComponent","lib"],"mappings":";;0fAsBA,IAAIA,EAAWC,EACXC,EAAaC,EACbC,EAAWC,EAAsCC,YACjDC,EAASC,EAqCb,ICxCIC,EAAUR,EACVS,EAAOP,EACPQ,EDgBJ,SAAmBC,EAAMC,GACxB,OAAMb,EAAUa,GAGXX,EAAYW,EAAS,SACzBD,EAAKE,IAAMD,EAAQC,KACbV,EAAUQ,EAAKE,MACb,IAAIC,UAAWR,EAAQ,8DAA+D,MAAOK,EAAKE,MAGtGZ,EAAYW,EAAS,aACzBD,EAAKI,QAAUH,EAAQG,SACjBZ,EAAUQ,EAAKI,UACb,IAAID,UAAWR,EAAQ,8DAA+D,UAAWK,EAAKI,UAGxG,KAdC,IAAID,UAAWR,EAAQ,qEAAsEM,KCjBlGI,mJA0DJ,IAAAC,EArCA,SAA4BL,GAC3B,IAAID,EACAO,EAKJ,GAJAP,EAAOF,EAAMO,GACRG,UAAUC,OAAS,IACvBF,EAAMR,EAAUC,EAAMC,IAElBM,EACJ,MAAMA,EAEP,OAAOG,EAUP,SAASA,IACR,IAEIC,EACAC,EAHAC,EAAOL,UAAW,GAClBN,EAAMF,EAAKE,IAAM,SAASW,EAG9B,IAAMD,EAAI,EAAGA,EAAIJ,UAAUC,OAAQG,IAClCV,GAAO,UAAYY,mBAAoBN,UAAWI,IAInD,OAFAD,EAAMd,EAASG,EAAKI,QAAS,UAAWF,GACxCS,EAAMd,EAASc,EAAK,WAAYE,KCpClCE,EALwB1B"}